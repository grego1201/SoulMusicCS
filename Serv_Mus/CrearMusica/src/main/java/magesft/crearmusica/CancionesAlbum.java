/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package magesft.crearmusica;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import magesft.sockets.Sockets;
import magesft2.conectar.Conexion_BBDD;

/**
 *
 * @author Gonzalo
 */
public class CancionesAlbum extends javax.swing.JFrame {

    DefaultListModel dfm_al, dfm_mus;
    int iden = 0;
    JFrame jf;

    /**
     * Creates new form CancionesAlbum
     */
    public CancionesAlbum() {
        initComponents();
    }
    public CancionesAlbum(JFrame jf) {
        initComponents();
        this.jf=jf;
        dfm_al = new DefaultListModel<>();
        dfm_mus = new DefaultListModel<>();

        ArrayList cancion;
        String tabla2 = "musica";
        String[] campo2 = {"ID", "Nombre_cancion"};
        String condicion2 = "";
        Sockets so = new Sockets();
        ObjectInputStream in = so.getIn();
        ObjectOutputStream out = so.getOut();
        Socket s = so.getS();
        try {
            String recibido = (String) in.readObject();
            System.out.println(recibido);
            out.writeObject(1);
            out.writeObject(tabla2);
            out.writeObject(campo2);
            out.writeObject(condicion2);
            cancion = (ArrayList<String[]>) in.readObject();
            for (int i = 0; i < cancion.size(); i++) {
                dfm_mus.add(i, ((String) ((String[]) (cancion.get(i)))[0]) + "\n -" + ((String) ((String[]) (cancion.get(i)))[1]));
            }
            lis_canciones.setModel(dfm_mus);
            list_canciones.updateUI();
            if (cancion.size() == 0) {
                JOptionPane.showMessageDialog(this, "No hay canciones");
                //IR ATRAS
            }
        } catch (Exception ex) {

        }

        ArrayList albun;
        String tabla3 = "album";
        String[] campo3 = {"ID", "Nombre_album", "Autor"};
        String condicion3 = "";
        so = new Sockets();
        in = so.getIn();
        out = so.getOut();
        s = so.getS();
        try {
            String recibido = (String) in.readObject();
            System.out.println(recibido);
            out.writeObject(1);
            out.writeObject(tabla3);
            out.writeObject(campo3);
            out.writeObject(condicion3);
            albun = (ArrayList<String[]>) in.readObject();
            for (int i = 0; i < albun.size(); i++) {
                dfm_al.add(i, ((String) ((String[]) (albun.get(i)))[0]) + "\n -" + ((String) ((String[]) (albun.get(i)))[1]) + " del autor " + ((String) ((String[]) (albun.get(i)))[2]));
            }
            list_album.setModel(dfm_al);
            list_album.updateUI();
            if (albun.size() == 0) {
                JOptionPane.showMessageDialog(this, "No hay canciones");
                //IR ATRAS
            }
        } catch (Exception ex) {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        list_album = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        list_canciones = new javax.swing.JScrollPane();
        lis_canciones = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        list_album.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                list_albumValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(list_album);

        jLabel1.setText("Album");

        jLabel2.setText("Canciones");

        jButton1.setText("Alta");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        list_canciones.setViewportView(lis_canciones);

        jButton2.setText("Atras");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 259, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(138, 138, 138))
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(list_canciones, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(list_canciones)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        String nombre_album = list_album.getSelectedValue().substring(0, list_album.getSelectedValue().indexOf("\n")).trim();
        String nombre_cancion = lis_canciones.getSelectedValue().substring(0, lis_canciones.getSelectedValue().indexOf("\n")).trim();
        Integer.parseInt(nombre_album);
        Integer.parseInt(nombre_cancion);
        String tabla = "linea_album";
        String[] campos = {"ID_Musica", "ID_Album"};
        String[] insertar = {nombre_cancion, nombre_album};
        if (list_album.getSelectedIndex() != -1 || lis_canciones.getSelectedIndex() == -1) {
            

            try {
                Conexion_BBDD c=new Conexion_BBDD();
                if(!c.insertar(tabla, campos, insertar)){
                    JOptionPane.showMessageDialog(this, "Error al meter canciones al album");
                }
            } catch (Exception ex) {

            }

            CancionesAlbum c = new CancionesAlbum(jf);
            this.setVisible(false);
            c.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Selecciona un album y cancion");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void list_albumValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_list_albumValueChanged
        try {
            // TODO add your handling code here:
            dfm_mus = new DefaultListModel();
            

            String[] campos = {"ID_Musica"};
            String condicion = "where ID_Album='" + list_album.getSelectedValue().substring(0, list_album.getSelectedValue().indexOf("\n")).trim() + "'";

            Conexion_BBDD c=new Conexion_BBDD();
            ArrayList<String[]> arr = c.consulta("linea_album", campos, condicion);


            String[] campos2 = {"ID", "Nombre_cancion"};
            String condicion2 = "";
            if (!arr.isEmpty()) {
                condicion2="where ";
                for (int i = 0; i < arr.size() - 1; i++) {
                    condicion2 = condicion2 + "ID <> '" + (String) ((String[]) arr.get(i))[0] + "' AND ";
                }
                condicion2 = condicion2 + "ID <> '" + (String) ((String[]) arr.get(arr.size() - 1))[0] + "'";
            }

            
            c=new Conexion_BBDD();
            ArrayList<String[]> arr2 = c.consulta("musica", campos2, condicion2);

            for (int i = 0; i < arr2.size(); i++) {
                dfm_mus.add(i, ((String) ((String[]) (arr2.get(i)))[0]) + "\n -" + ((String) ((String[]) (arr2.get(i)))[1]));
            }
            lis_canciones.setModel(dfm_mus);
            list_canciones.updateUI();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CancionesAlbum.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CancionesAlbum.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_list_albumValueChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jf.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CancionesAlbum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CancionesAlbum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CancionesAlbum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CancionesAlbum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CancionesAlbum().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lis_canciones;
    private javax.swing.JList<String> list_album;
    private javax.swing.JScrollPane list_canciones;
    // End of variables declaration//GEN-END:variables
}
