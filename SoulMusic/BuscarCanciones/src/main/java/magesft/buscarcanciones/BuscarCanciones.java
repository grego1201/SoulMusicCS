/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package magesft.buscarcanciones;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import magesft.clases.Musica;
import magesft.reproductor.Panel;
import magesft.sockets.Sockets;

/**
 *
 * @author Gonzalo
 */
public class BuscarCanciones extends javax.swing.JFrame {
    DefaultListModel<Musica> dfm;
    LinkedList<Musica> l_musica;
    JFrame jf;
    /**
     * Creates new form BuscarCanciones
     */
    public BuscarCanciones(JFrame jf) {
        this.jf=jf;
        try {
            initComponents();
            this.setLocationRelativeTo(null);
            b_cargar.setEnabled(false);
            dfm=new DefaultListModel<>();
            l_musica = new LinkedList<>();
            Sockets so = new Sockets();

            Socket s = so.getS();
            ObjectInputStream in = so.getIn();
            ObjectOutputStream out = so.getOut();

            System.out.println(in.readObject());
            String[] campos = {"Nombre"};
            String condicion = "";
            out.writeObject(1);
            out.writeObject("autor");
            out.writeObject(campos);
            out.writeObject(condicion);
            ArrayList<String[]> arr = (ArrayList<String[]>) in.readObject();

            for (int i = 0; i < arr.size(); i++) {
                c_artistas.addItem(((String[]) arr.get(i))[0]);
            }

            so = new Sockets();
            s = so.getS();
            in = so.getIn();
            out = so.getOut();

            System.out.println(in.readObject());
            String[] campos2 = {"ID", "Nombre_album"};
            out.writeObject(1);
            out.writeObject("album");
            out.writeObject(campos2);
            out.writeObject(condicion);
            arr = (ArrayList<String[]>) in.readObject();

            for (int i = 0; i < arr.size(); i++) {
                c_album.addItem(((String[]) arr.get(i))[0] + "-" + ((String[]) arr.get(i))[1]);
            }

        } catch (IOException ex) {
            Logger.getLogger(BuscarCanciones.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BuscarCanciones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        c_artistas = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        c_album = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        l_titulo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        list_musica = new javax.swing.JList<>();
        b_cargar = new javax.swing.JButton();
        Btnatras = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Buscar canciones:");

        c_artistas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));

        jLabel2.setText("Artista:");

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Album:");

        c_album.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));

        jLabel4.setText("Titulo: ");

        jScrollPane1.setViewportView(list_musica);

        b_cargar.setText("Cargar");
        b_cargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cargarActionPerformed(evt);
            }
        });

        Btnatras.setText("Atr√°s");
        Btnatras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnatrasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(163, 163, 163))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(c_artistas, 0, 119, Short.MAX_VALUE)
                            .addComponent(c_album, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(l_titulo)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Btnatras)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(44, 44, 44)
                        .addComponent(b_cargar)))
                .addGap(50, 50, 50)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(c_artistas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(c_album, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l_titulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(b_cargar)
                            .addComponent(Btnatras)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 20, Short.MAX_VALUE)))
                .addGap(8, 8, 8))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        l_musica=new LinkedList<>();
        dfm = new DefaultListModel<>();
        Sockets so = new Sockets();
        ArrayList<String[]> musica = new ArrayList<>();
        Socket s = so.getS();
        ObjectInputStream in = so.getIn();
        ObjectOutputStream out = so.getOut();
        
        String artistas = (String) c_artistas.getSelectedItem();
        String album = (String) c_album.getSelectedItem();
        String nombre = l_titulo.getText();

        if (nombre.compareToIgnoreCase("") != 0) {
            try {
                String[] campos = {"Nombre_cancion", "Autor", "ID", "Duracion", "enlace","Precio"};
                String condicion = " where Nombre_cancion='" + nombre + "'";
                System.out.println(in.readObject());
                out.writeObject(1);
                out.writeObject("musica");
                out.writeObject(campos);
                out.writeObject(condicion);
                ArrayList<String[]> arr = (ArrayList<String[]>) in.readObject();
                for (int i = 0; i < arr.size(); i++) {
                    musica.add(arr.get(i));
                }
                   

            } catch (IOException ex) {
                Logger.getLogger(BuscarCanciones.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(BuscarCanciones.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            if (artistas.compareToIgnoreCase("") != 0) {

                try {
                    String[] campos = {"Nombre_cancion", "Autor", "ID", "Duracion","enlace","Precio"};
                    String condicion = " where Autor='" + artistas + "'";
                    System.out.println(in.readObject());
                    out.writeObject(1);
                    out.writeObject("musica");
                    out.writeObject(campos);
                    out.writeObject(condicion);
                    ArrayList<String[]> arr = (ArrayList<String[]>) in.readObject();
                    for (int i = 0; i < arr.size(); i++) {
                        musica.add(arr.get(i));
                    }
                    
                } catch (IOException ex) {
                    Logger.getLogger(BuscarCanciones.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(BuscarCanciones.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                if (album.compareToIgnoreCase("") != 0) {
                    try {
                        String[] campos = {"ID_Musica"};
                        String condicion = " where ID_Album='" + album.substring(0, album.indexOf("-")) + "'";
                        System.out.println(in.readObject());
                        out.writeObject(1);
                        out.writeObject("linea_album");
                        out.writeObject(campos);
                        out.writeObject(condicion);
                        ArrayList<String[]> arr = (ArrayList<String[]>) in.readObject();


                        String[] campos2 = {"Nombre_cancion", "Autor", "ID", "Duracion", "enlace","Precio"};
                        for (int i = 0; i < arr.size(); i++) {
                            so = new Sockets();

                            s = so.getS();
                            in = so.getIn();
                            out = so.getOut();
                            condicion = " where ID='"+((String[])arr.get(i))[0]+"'";
                            System.out.println(in.readObject());
                            out.writeObject(1);
                            out.writeObject("musica");
                            out.writeObject(campos2);
                            out.writeObject(condicion);
                            arr = (ArrayList<String[]>) in.readObject();
                            musica.add(arr.get(0));
                        }
                        for (int i = 0; i < musica.size(); i++) {
                            System.out.println(((String[])musica.get(i))[0]);
                        }

                    } catch (IOException ex) {
                        Logger.getLogger(BuscarCanciones.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(BuscarCanciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Rellena alguno de los campos");
                }
                
            }
        }
        for (int i = 0; i < musica.size(); i++) {
                    String cancion="";
                    Musica m=new Musica(((String[])musica.get(i))[0], ((String[])musica.get(i))[1], ((String[])musica.get(i))[2], ((String[])musica.get(i))[3], ((String[])musica.get(i))[4], ((String[])musica.get(i))[5]);
                    l_musica.add(m);
                    dfm.add(i, m);
                }
                list_musica.setModel(dfm);
          if(l_musica.size()>0){
              b_cargar.setEnabled(true);
          }      

    }//GEN-LAST:event_jButton1ActionPerformed

    private void b_cargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cargarActionPerformed
        // TODO add your handling code here:
        Panel p=new Panel(l_musica,this);
        p.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_b_cargarActionPerformed

    private void BtnatrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnatrasActionPerformed
        jf.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_BtnatrasActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btnatras;
    private javax.swing.JButton b_cargar;
    private javax.swing.JComboBox<String> c_album;
    private javax.swing.JComboBox<String> c_artistas;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField l_titulo;
    private javax.swing.JList<Musica> list_musica;
    // End of variables declaration//GEN-END:variables
}
